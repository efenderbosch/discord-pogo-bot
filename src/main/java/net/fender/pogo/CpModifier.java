package net.fender.pogo;

import java.util.HashMap;
import java.util.Map;

public class CpModifier {

    private static final Map<Double, Double> MODIFIERS = new HashMap<>();

    static {
        MODIFIERS.put(1.0, 0.0939999967813492);
        MODIFIERS.put(1.5, 0.135137432089339);
        MODIFIERS.put(2.0, 0.166397869586945);
        MODIFIERS.put(2.5, 0.192650913155325);
        MODIFIERS.put(3.0, 0.215732470154762);
        MODIFIERS.put(3.5, 0.236572651424822);
        MODIFIERS.put(4.0, 0.255720049142838);
        MODIFIERS.put(4.5, 0.273530372106572);
        MODIFIERS.put(5.0, 0.290249884128571);
        MODIFIERS.put(5.5, 0.306057381389863);
        MODIFIERS.put(6.0, 0.321087598800659);
        MODIFIERS.put(6.5, 0.335445031996451);
        MODIFIERS.put(7.0, 0.349212676286697);
        MODIFIERS.put(7.5, 0.362457736609939);
        MODIFIERS.put(8.0, 0.375235587358475);
        MODIFIERS.put(8.5, 0.387592407713878);
        MODIFIERS.put(9.0, 0.399567276239395);
        MODIFIERS.put(9.5, 0.4111935532161);
        MODIFIERS.put(10.0, 0.422500014305115);
        MODIFIERS.put(10.5, 0.432926420512509);
        MODIFIERS.put(11.0, 0.443107545375824);
        MODIFIERS.put(11.5, 0.453059948165049);
        MODIFIERS.put(12.0, 0.46279838681221);
        MODIFIERS.put(12.5, 0.472336085311278);
        MODIFIERS.put(13.0, 0.481684952974319);
        MODIFIERS.put(13.5, 0.490855807179549);
        MODIFIERS.put(14.0, 0.499858438968658);
        MODIFIERS.put(14.5, 0.5087017489616);
        MODIFIERS.put(15.0, 0.517393946647644);
        MODIFIERS.put(15.5, 0.525942516110322);
        MODIFIERS.put(16.0, 0.534354329109192);
        MODIFIERS.put(16.5, 0.542635753803599);
        MODIFIERS.put(17.0, 0.550792694091797);
        MODIFIERS.put(17.5, 0.558830584490385);
        MODIFIERS.put(18.0, 0.566754519939423);
        MODIFIERS.put(18.5, 0.57456912814537);
        MODIFIERS.put(19.0, 0.582278907299042);
        MODIFIERS.put(19.5, 0.589887907888945);
        MODIFIERS.put(20.0, 0.597400009632111);
        MODIFIERS.put(20.5, 0.604823648665171);
        MODIFIERS.put(21.0, 0.61215728521347);
        MODIFIERS.put(21.5, 0.619404107958234);
        MODIFIERS.put(22.0, 0.626567125320435);
        MODIFIERS.put(22.5, 0.633649178748576);
        MODIFIERS.put(23.0, 0.6406529545784);
        MODIFIERS.put(23.5, 0.647580971386554);
        MODIFIERS.put(24.0, 0.654435634613037);
        MODIFIERS.put(24.5, 0.661219265805859);
        MODIFIERS.put(25.0, 0.667934000492095);
        MODIFIERS.put(25.5, 0.674581885647492);
        MODIFIERS.put(26.0, 0.681164920330048);
        MODIFIERS.put(26.5, 0.687684901255373);
        MODIFIERS.put(27.0, 0.694143652915955);
        MODIFIERS.put(27.5, 0.700542901033063);
        MODIFIERS.put(28.0, 0.706884205341339);
        MODIFIERS.put(28.5, 0.713169074873823);
        MODIFIERS.put(29.0, 0.719399094581604);
        MODIFIERS.put(29.5, 0.725575586915154);
        MODIFIERS.put(30.0, 0.731700003147125);
        MODIFIERS.put(30.5, 0.734741038550429);
        MODIFIERS.put(31.0, 0.737769484519958);
        MODIFIERS.put(31.5, 0.740785579737136);
        MODIFIERS.put(32.0, 0.743789434432983);
        MODIFIERS.put(32.5, 0.746781197247765);
        MODIFIERS.put(33.0, 0.749761044979095);
        MODIFIERS.put(33.5, 0.752729099732281);
        MODIFIERS.put(34.0, 0.75568550825119);
        MODIFIERS.put(34.5, 0.758630370209851);
        MODIFIERS.put(35.0, 0.761563837528229);
        MODIFIERS.put(35.5, 0.76448604959218);
        MODIFIERS.put(36.0, 0.767397165298462);
        MODIFIERS.put(36.5, 0.770297293677362);
        MODIFIERS.put(37.0, 0.773186504840851);
        MODIFIERS.put(37.5, 0.776064947064992);
        MODIFIERS.put(38.0, 0.778932750225067);
        MODIFIERS.put(38.5, 0.781790050767666);
        MODIFIERS.put(39.0, 0.784636974334717);
        MODIFIERS.put(39.5, 0.787473608513275);
        MODIFIERS.put(40.0, 0.790300011634827);
        MODIFIERS.put(40.5, 0.792803968023538);
        MODIFIERS.put(41.0, 0.795300006866455);
        MODIFIERS.put(41.5, 0.797803898371622);
        MODIFIERS.put(42.0, 0.800300002098083);
        MODIFIERS.put(42.5, 0.802803871877596);
        MODIFIERS.put(43.0, 0.805299997329711);
        MODIFIERS.put(43.5, 0.807803850847053);
        MODIFIERS.put(44.0, 0.81029999256134);
        MODIFIERS.put(44.5, 0.812803835179168);
        MODIFIERS.put(45.0, 0.815299987792968);
    }

    public static double getCpModifier(double level) {
        return MODIFIERS.get(level);
    }
}
